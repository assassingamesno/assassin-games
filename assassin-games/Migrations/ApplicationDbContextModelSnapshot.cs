// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using assassingames_backend.DbContexts;

namespace assassingames_backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("assassingames_backend.Models.Hunt", b =>
                {
                    b.Property<Guid>("HuntId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)");

                    b.Property<Guid>("AssassinId")
                        .HasColumnType("binary(16)");

                    b.Property<DateTime?>("KillTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("binary(16)");

                    b.HasKey("HuntId");

                    b.HasIndex("AssassinId");

                    b.HasIndex("TargetId");

                    b.ToTable("Hunts");
                });

            modelBuilder.Entity("assassingames_backend.Models.Leadership", b =>
                {
                    b.Property<Guid>("LeadershipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)");

                    b.Property<DateTime?>("LeadershipEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LeadershipStart")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("OrganiserId")
                        .HasColumnType("binary(16)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("binary(16)");

                    b.HasKey("LeadershipId");

                    b.HasIndex("OrganiserId");

                    b.HasIndex("UserId");

                    b.ToTable("Leaderships");
                });

            modelBuilder.Entity("assassingames_backend.Models.Organiser", b =>
                {
                    b.Property<Guid>("OrganiserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)");

                    b.Property<string>("Country")
                        .HasColumnType("longtext");

                    b.Property<string>("County")
                        .HasColumnType("longtext");

                    b.Property<string>("Municipality")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("OrganiserId");

                    b.ToTable("Organisers");
                });

            modelBuilder.Entity("assassingames_backend.Models.Participation", b =>
                {
                    b.Property<Guid>("ParticipationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("Animal")
                        .HasColumnType("longtext");

                    b.Property<string>("Biography")
                        .HasColumnType("longtext");

                    b.Property<string>("Colour")
                        .HasColumnType("longtext");

                    b.Property<bool>("FeePaid")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Food")
                        .HasColumnType("longtext");

                    b.Property<string>("HangoutSpots")
                        .HasColumnType("longtext");

                    b.Property<string>("Nickname")
                        .HasColumnType("longtext");

                    b.Property<string>("Obituary")
                        .HasColumnType("longtext");

                    b.Property<Guid>("SeasonId")
                        .HasColumnType("binary(16)");

                    b.Property<string>("Skill")
                        .HasColumnType("longtext");

                    b.Property<string>("Stores")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UniversityAttendanceId")
                        .HasColumnType("binary(16)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("binary(16)");

                    b.HasKey("ParticipationId");

                    b.HasIndex("SeasonId");

                    b.HasIndex("UniversityAttendanceId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Participations");
                });

            modelBuilder.Entity("assassingames_backend.Models.Prize", b =>
                {
                    b.Property<Guid>("PrizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)");

                    b.Property<string>("PrizeDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("Provider")
                        .HasColumnType("longtext");

                    b.Property<Guid>("SeasonId")
                        .HasColumnType("binary(16)");

                    b.Property<string>("TaskDescription")
                        .HasColumnType("longtext");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("PrizeId");

                    b.HasIndex("SeasonId");

                    b.ToTable("Prizes");
                });

            modelBuilder.Entity("assassingames_backend.Models.Rule", b =>
                {
                    b.Property<Guid>("RuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)");

                    b.Property<DateTime>("Added")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("Phase")
                        .HasColumnType("int");

                    b.Property<Guid>("SeasonId")
                        .HasColumnType("binary(16)");

                    b.HasKey("RuleId");

                    b.HasIndex("SeasonId");

                    b.ToTable("Rules");
                });

            modelBuilder.Entity("assassingames_backend.Models.Season", b =>
                {
                    b.Property<Guid>("SeasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)");

                    b.Property<int>("Limit")
                        .HasColumnType("int");

                    b.Property<Guid>("OrganiserId")
                        .HasColumnType("binary(16)");

                    b.Property<int>("Phase")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("RegistrationStart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("SeasonEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SeasonNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("SeasonStart")
                        .HasColumnType("datetime(6)");

                    b.HasKey("SeasonId");

                    b.HasIndex("OrganiserId");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("assassingames_backend.Models.Study", b =>
                {
                    b.Property<Guid>("StudyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)");

                    b.Property<string>("Campus")
                        .HasColumnType("longtext");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<string>("Level")
                        .HasColumnType("longtext");

                    b.Property<string>("StudyName")
                        .HasColumnType("longtext");

                    b.Property<string>("University")
                        .HasColumnType("longtext");

                    b.HasKey("StudyId");

                    b.ToTable("Studies");
                });

            modelBuilder.Entity("assassingames_backend.Models.UniversityAttendance", b =>
                {
                    b.Property<Guid>("UniversityAttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<Guid>("StudyId")
                        .HasColumnType("binary(16)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("UniversityAttendanceId");

                    b.HasIndex("StudyId");

                    b.ToTable("UniversityAttendances");
                });

            modelBuilder.Entity("assassingames_backend.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)");

                    b.Property<string>("EMail")
                        .HasColumnType("longtext");

                    b.Property<string>("InstagramHandle")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("assassingames_backend.Models.Hunt", b =>
                {
                    b.HasOne("assassingames_backend.Models.Participation", "Assassin")
                        .WithMany("Hunts")
                        .HasForeignKey("AssassinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("assassingames_backend.Models.Participation", "Target")
                        .WithMany("Hunteds")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assassin");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("assassingames_backend.Models.Leadership", b =>
                {
                    b.HasOne("assassingames_backend.Models.Organiser", "Organiser")
                        .WithMany("Leaderships")
                        .HasForeignKey("OrganiserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("assassingames_backend.Models.User", "User")
                        .WithMany("Leaderships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organiser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("assassingames_backend.Models.Participation", b =>
                {
                    b.HasOne("assassingames_backend.Models.Season", "Season")
                        .WithMany("Participations")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("assassingames_backend.Models.UniversityAttendance", "UniversityAttendance")
                        .WithOne("Participation")
                        .HasForeignKey("assassingames_backend.Models.Participation", "UniversityAttendanceId");

                    b.HasOne("assassingames_backend.Models.User", "User")
                        .WithMany("Participations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Season");

                    b.Navigation("UniversityAttendance");

                    b.Navigation("User");
                });

            modelBuilder.Entity("assassingames_backend.Models.Prize", b =>
                {
                    b.HasOne("assassingames_backend.Models.Season", "Season")
                        .WithMany("Prizes")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Season");
                });

            modelBuilder.Entity("assassingames_backend.Models.Rule", b =>
                {
                    b.HasOne("assassingames_backend.Models.Season", "Season")
                        .WithMany("Rules")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Season");
                });

            modelBuilder.Entity("assassingames_backend.Models.Season", b =>
                {
                    b.HasOne("assassingames_backend.Models.Organiser", "Organiser")
                        .WithMany("Seasons")
                        .HasForeignKey("OrganiserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organiser");
                });

            modelBuilder.Entity("assassingames_backend.Models.UniversityAttendance", b =>
                {
                    b.HasOne("assassingames_backend.Models.Study", "Study")
                        .WithMany("UniversityAttendances")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Study");
                });

            modelBuilder.Entity("assassingames_backend.Models.Organiser", b =>
                {
                    b.Navigation("Leaderships");

                    b.Navigation("Seasons");
                });

            modelBuilder.Entity("assassingames_backend.Models.Participation", b =>
                {
                    b.Navigation("Hunteds");

                    b.Navigation("Hunts");
                });

            modelBuilder.Entity("assassingames_backend.Models.Season", b =>
                {
                    b.Navigation("Participations");

                    b.Navigation("Prizes");

                    b.Navigation("Rules");
                });

            modelBuilder.Entity("assassingames_backend.Models.Study", b =>
                {
                    b.Navigation("UniversityAttendances");
                });

            modelBuilder.Entity("assassingames_backend.Models.UniversityAttendance", b =>
                {
                    b.Navigation("Participation");
                });

            modelBuilder.Entity("assassingames_backend.Models.User", b =>
                {
                    b.Navigation("Leaderships");

                    b.Navigation("Participations");
                });
#pragma warning restore 612, 618
        }
    }
}
